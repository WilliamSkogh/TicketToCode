@page "/login"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject CustomAuthStateProvider AuthProvider
@inject IJSRuntime JS

<head>
    <link rel="stylesheet" href="css/login.css">
    <link rel="stylesheet" href="css/Background.css">
</head>
<div class="login-container">
<h3>Logga in</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color:red">@errorMessage</p>
}

<input @bind="username" placeholder="Användarnamn" />
<input @bind="password" type="password" />
<button @onclick="LoginUser">Logga in</button>
</div>
@code {
    private string username = "";
    private string password = "";
    private string errorMessage = "";

    private async Task LoginUser()
    {
        var response = await Http.PostAsJsonAsync("auth/login", new { username, password });

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<AuthResponse>();

            if (result is not null && !string.IsNullOrEmpty(result.Access_Token))
            {
                await AuthProvider.SetUserAsync(result.Access_Token);
                Navigation.NavigateTo("/");
            }
            else
            {
                errorMessage = "Token saknas i svaret.";
            }
        }
        else
        {
            errorMessage = "Felaktigt användarnamn eller lösenord";
        }
    }

private class AuthResponse
{
    public string? Username { get; set; }
    public string? Role { get; set; }
    public string? Access_Token { get; set; }
}
}